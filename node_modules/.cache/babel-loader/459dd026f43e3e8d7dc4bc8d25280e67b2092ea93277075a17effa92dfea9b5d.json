{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mujahid\\\\Desktop\\\\ReactFolio\\\\top-course-starter\\\\src\\\\components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = props => {\n  _s();\n  let courses = props.courses;\n  let category = props.category;\n  const [likedCourses, setLikedCourses] = useState([]);\n\n  //returns you a list of all courses recieved from api response\n  function getCourses() {\n    if (category === \"All\") {\n      let allCourses = []; // array to store courses data into a single array\n      // inserting all the data into a single array\n      Object.values(courses).forEach(array => {\n        //getting only VALUE from key-values pair and for each value running forEach loop\n        array.forEach(data => {\n          // getting every single value of VALUE and inserting into a single array\n          allCourses.push(data);\n        });\n      });\n      return allCourses;\n    } else {\n      // main sirf specific category ka array pass krunga\n      return courses[category];\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap justify-center gap-4 mb-4\",\n    children: getCourses().map(course => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        course: course,\n        likedCourses: likedCourses,\n        setLikedCourses: setLikedCourses,\n        children: \" \"\n      }, course.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 28\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Cards, \"KP37kmpS0XhdZPz1Rd7V6iwaxXc=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","Cards","props","_s","courses","category","likedCourses","setLikedCourses","getCourses","allCourses","Object","values","forEach","array","data","push","className","children","map","course","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mujahid/Desktop/ReactFolio/top-course-starter/src/components/Cards.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Card from './Card'\r\n\r\nconst Cards = (props) => {\r\n    let courses = props.courses;\r\n    let category = props.category;\r\n    const [likedCourses, setLikedCourses] = useState([]);\r\n\r\n    //returns you a list of all courses recieved from api response\r\n    function getCourses() {\r\n        if (category === \"All\") {\r\n            let allCourses = []; // array to store courses data into a single array\r\n            // inserting all the data into a single array\r\n            Object.values(courses).forEach(array => {       //getting only VALUE from key-values pair and for each value running forEach loop\r\n                array.forEach(data => {                   // getting every single value of VALUE and inserting into a single array\r\n                    allCourses.push(data)\r\n                })\r\n            })\r\n            return allCourses;\r\n        }\r\n        else{\r\n            // main sirf specific category ka array pass krunga\r\n            return courses[category];\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='flex flex-wrap justify-center gap-4 mb-4'>\r\n            {\r\n                getCourses().map((course) => {\r\n                    return <Card key={course.id} course={course} likedCourses={likedCourses} setLikedCourses={setLikedCourses}> </Card>\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB,IAAIC,OAAO,GAAGF,KAAK,CAACE,OAAO;EAC3B,IAAIC,QAAQ,GAAGH,KAAK,CAACG,QAAQ;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,SAASW,UAAUA,CAAA,EAAG;IAClB,IAAIH,QAAQ,KAAK,KAAK,EAAE;MACpB,IAAII,UAAU,GAAG,EAAE,CAAC,CAAC;MACrB;MACAC,MAAM,CAACC,MAAM,CAACP,OAAO,CAAC,CAACQ,OAAO,CAACC,KAAK,IAAI;QAAQ;QAC5CA,KAAK,CAACD,OAAO,CAACE,IAAI,IAAI;UAAoB;UACtCL,UAAU,CAACM,IAAI,CAACD,IAAI,CAAC;QACzB,CAAC,CAAC;MACN,CAAC,CAAC;MACF,OAAOL,UAAU;IACrB,CAAC,MACG;MACA;MACA,OAAOL,OAAO,CAACC,QAAQ,CAAC;IAC5B;EAEJ;EACA,oBACIL,OAAA;IAAKgB,SAAS,EAAC,0CAA0C;IAAAC,QAAA,EAEjDT,UAAU,EAAE,CAACU,GAAG,CAAEC,MAAM,IAAK;MACzB,oBAAOnB,OAAA,CAACF,IAAI;QAAiBqB,MAAM,EAAEA,MAAO;QAACb,YAAY,EAAEA,YAAa;QAACC,eAAe,EAAEA,eAAgB;QAAAU,QAAA,EAAC;MAAC,GAA1FE,MAAM,CAACC,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAwF;IACvH,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGJ;AAEd,CAAC;AAAArB,EAAA,CAjCKF,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAmCX,eAAeA,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}