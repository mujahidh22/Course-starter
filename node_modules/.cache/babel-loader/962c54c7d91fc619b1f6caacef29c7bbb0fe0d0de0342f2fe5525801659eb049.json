{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mujahid\\\\Desktop\\\\ReactFolio\\\\top-course-starter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { apiUrl, filterData } from \"./data\";\nimport Navbar from \"./components/Navbar\";\nimport Filter from \"./components/Filter\";\nimport Cards from \"./components/Cards\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // const [courses,setCourse] = useState();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await fetch(apiUrl); //api call\n        const data = await result.json(); // convert api data into json format\n        //save data into a variable\n        console.log(data);\n      } catch (error) {\n        toast.error('Something went wrong');\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filterData: filterData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","apiUrl","filterData","Navbar","Filter","Cards","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","fetchData","result","fetch","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mujahid/Desktop/ReactFolio/top-course-starter/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {apiUrl,filterData} from \"./data\";\nimport Navbar from \"./components/Navbar\";\nimport Filter from \"./components/Filter\";\nimport Cards from \"./components/Cards\";\nimport { toast } from \"react-toastify\";\n\nconst App = () => {    \n\n  // const [courses,setCourse] = useState();\n\n  useEffect(()=>{\n    const fetchData = async()=>{\n      try{\n        const result = await fetch(apiUrl); //api call\n        const data = await result.json();   // convert api data into json format\n        //save data into a variable\n        console.log(data)\n      }\n      catch(error){\n        toast.error('Something went wrong');\n      }\n    }\n    fetchData();\n  },[]);\n\n  return (\n    <>\n\n      <Navbar></Navbar>\n\n      <Filter filterData={filterData}></Filter>\n\n      <Cards></Cards>\n    \n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAAQC,MAAM,EAACC,UAAU,QAAO,QAAQ;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB;;EAEAb,SAAS,CAAC,MAAI;IACZ,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAS;MACzB,IAAG;QACD,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAACd,MAAM,CAAC,CAAC,CAAC;QACpC,MAAMe,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAI,EAAE,CAAC,CAAG;QACpC;QACAC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACnB,CAAC,CACD,OAAMI,KAAK,EAAC;QACVd,KAAK,CAACc,KAAK,CAAC,sBAAsB,CAAC;MACrC;IACF,CAAC;IACDP,SAAS,EAAE;EACb,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEL,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBAEEb,OAAA,CAACL,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU,eAEjBjB,OAAA,CAACJ,MAAM;MAACF,UAAU,EAAEA;IAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU,eAEzCjB,OAAA,CAACH,KAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAEd;AAEP,CAAC;AAACb,EAAA,CA9BID,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAgCT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}